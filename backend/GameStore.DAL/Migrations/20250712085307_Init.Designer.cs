// <auto-generated />
using System;
using GameStore.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameStore.DAL.Migrations
{
    [DbContext(typeof(GStoreDatabaseContext))]
    [Migration("20250712085307_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbGameDbGenre", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("DbGameDbGenre");
                });

            modelBuilder.Entity("DbGameDbPlatformType", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformTypesId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "PlatformTypesId");

                    b.HasIndex("PlatformTypesId");

                    b.ToTable("DbGameDbPlatformType");
                });

            modelBuilder.Entity("GameStore.Models.DbComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("GameStore.Models.DbGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReleaseAtDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Games", (string)null);
                });

            modelBuilder.Entity("GameStore.Models.DbGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ParentGenreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentGenreId");

                    b.HasIndex("Name", "ParentGenreId")
                        .IsUnique()
                        .HasFilter("[ParentGenreId] IS NOT NULL");

                    b.ToTable("Genres", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "RPG"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Races"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Puzzle&Skill"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Misc"
                        },
                        new
                        {
                            Id = 10,
                            Name = "RTS",
                            ParentGenreId = 1
                        },
                        new
                        {
                            Id = 11,
                            Name = "TBS",
                            ParentGenreId = 1
                        },
                        new
                        {
                            Id = 20,
                            Name = "rally",
                            ParentGenreId = 4
                        },
                        new
                        {
                            Id = 21,
                            Name = "arcade",
                            ParentGenreId = 4
                        },
                        new
                        {
                            Id = 22,
                            Name = "formula",
                            ParentGenreId = 4
                        },
                        new
                        {
                            Id = 23,
                            Name = "off-road",
                            ParentGenreId = 4
                        },
                        new
                        {
                            Id = 30,
                            Name = "FPS",
                            ParentGenreId = 5
                        },
                        new
                        {
                            Id = 31,
                            Name = "TPS",
                            ParentGenreId = 5
                        },
                        new
                        {
                            Id = 32,
                            Name = "Misc",
                            ParentGenreId = 5
                        });
                });

            modelBuilder.Entity("GameStore.Models.DbPlatformType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("PlatformTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "mobile"
                        },
                        new
                        {
                            Id = 2,
                            Type = "browser"
                        },
                        new
                        {
                            Id = 3,
                            Type = "desktop"
                        },
                        new
                        {
                            Id = 4,
                            Type = "console"
                        });
                });

            modelBuilder.Entity("DbGameDbGenre", b =>
                {
                    b.HasOne("GameStore.Models.DbGame", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.Models.DbGenre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbGameDbPlatformType", b =>
                {
                    b.HasOne("GameStore.Models.DbGame", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.Models.DbPlatformType", null)
                        .WithMany()
                        .HasForeignKey("PlatformTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameStore.Models.DbComment", b =>
                {
                    b.HasOne("GameStore.Models.DbGame", "Game")
                        .WithMany("Comments")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameStore.Models.DbGenre", b =>
                {
                    b.HasOne("GameStore.Models.DbGenre", "ParentGenre")
                        .WithMany("SubGenres")
                        .HasForeignKey("ParentGenreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentGenre");
                });

            modelBuilder.Entity("GameStore.Models.DbGame", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("GameStore.Models.DbGenre", b =>
                {
                    b.Navigation("SubGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
